# usermod -a -G deploy www-data


Ubuntu 22.04

apt update
apt upgrade

apt install zip htop screen git fail2ban nginx python3-pip build-essential python3-distutils python3-dev libpq-dev supervisor libpq-dev python3-psycopg2 redis-server openssl libssl-dev libssl-doc python3-certbot-nginx python3.10-venv

adduser deploy
usermod -aG sudo deploy
su - deploy

git clone https://github.com/bitrootmedia/taskfocus_api.git

python3 -m venv taskfocus_api/venv
source taskfocus_api/venv/bin/activate
pip install uwsgi

cd taskfocus_api
pip install -r requirements.txt
create .env file and edit changes

```
SECRET_KEY="testing"
DEBUG=True
DATABASE_URL=postgresql://tasks_user:@db-postgresql-fra1-0xxxx.ondigitalocean.com:25060/tasks_db?sslmode=require
CSRF_TRUSTED_ORIGINS="http://localhost:3000,http://localhost:63342,http://localhost:3001"
DEFAULT_FILE_STORAGE=storages.backends.s3boto3.S3Boto3Storage
AWS_S3_REGION_NAME=sfo2
MEDIA_URL="https://lgs.sfo2.digitaloceanspaces.com/pm/"
AWS_S3_ENDPOINT_URL=https://lgs.sfo2.digitaloceanspaces.com
AWS_ACCESS_KEY_ID=...
AWS_SECRET_ACCESS_KEY=...
AWS_STORAGE_BUCKET_NAME=tasks
```

./manage.py migrate
./manage.py createsuperuser
./manage.py collectstatic

mkdir config
cd config
mkdir /home/deploy/log


vim uwsgi.ini

```
[uwsgi]

base = /home/taskfocus_api
master = true
virtualenv = /home/taskfocus_api/venv
pythonpath = %(base)
chdir = %(base)
module = pma.wsgi:application
socket = /tmp/taskfocus_api.sock
processes = 5
chown-socket = deploy:www-data
chmod-socket = 660
die-on-term = true

logger = file:/home/deploy/log/uwsgi.log

vacuum = true
buffer-size=65535
harakiri=15
max-requests=5000
```

TODO: @@@ Continue from here, maybe use supervisor this time to control UWSGI not systemctl?

sudo vim /etc/supervisor/conf.d/uwsgi.conf
```
[program:uwsgi]
user = root
command=/home/deploy/taskfocus_api/venv/bin/uwsgi --ini /home/deploy/taskfocus_api/config/uwsgi.ini
autostart=true
autorestart=true
stderr_logfile = /home/deploy/log/uwsgi_err.log
stdout_logfile = /home/deploy/log/uwsgi_out.log
stopsignal=INT
```

sudo supervisorctl reread
sudo supervisorctl reload
sudo supervisorctl status


vim /home/deploy/taskfocus_api/config/nginx.ini

i.e. tasks-api.domain.com

```
upstream taskfocus_api{
  server unix:///tmp/taskfocus_api.sock;
}

server {
  listen 80;
  server_name <domain>;
  client_max_body_size 20M;

  error_log /home/deploy/log/nginx.log warn;

  location /static/ {
    alias /home/deploy/taskfocus_api/staticfiles/;
  }

  location / {
    include /etc/nginx/uwsgi_params;
    uwsgi_pass taskfocus_api;
  }

}
```

sudo ln -s /home/deploy/taskfocus_api/config/nginx.ini /etc/nginx/sites-enabled/
sudo service nginx restart

check if running properly in browser ...
sudo certbot --nginx -d domain --non-interactive --agree-tos -m admin@domain --redirect


WEB part: i.e. tasks.domain.com
(move this to web app )

cd /home/deploy

git clone https://github.com/bitrootmedia/taskfocus_web.git

curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash
(exit terminal and reenter)

nvm install 16.14.0
npm install

vim .env
```
VITE_BASE_API_URL="https://tasks-api.domain.com/api"
VITE_PROJECT_NAME=Task Focus
VITE_DEFAULT_PAGE_SIZE=100
```

npm run build

sudo vim /etc/nginx/sites-enabled/app.ini

server {
  server_name <domain>;
  client_max_body_size 20M;

  error_log /home/deploy/log/web_app_nginx.log warn;

  location / {
    alias /home/deploy/taskfocus_web/dist/;
  }

    listen 80;
}


